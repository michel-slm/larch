#!/bin/sh
# Copyright 2010  Lars Wirzenius
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


echo -n "leaf_size    "
python -m timeit \
    -s 'import btree' \
    -s 'pairs = [("%019d" % i, "%032d" % i) for i in range(1000)]' \
    -s 'keys = [k for k, v in pairs]' \
    -s 'values = [v for k, v in pairs]' \
    -s 'codec = btree.NodeCodec(19)' \
    'codec.leaf_size(keys, values)'

echo -n "encode_leaf  "
python -m timeit \
    -s 'import btree' \
    -s 'pairs = [("%019d" % i, "%032d" % i) for i in range(1000)]' \
    -s 'keys = [k for k, v in pairs]' \
    -s 'values = [v for k, v in pairs]' \
    -s 'node = btree.LeafNode(42, keys, values)' \
    -s 'codec = btree.NodeCodec(19)' \
    'codec.encode_leaf(node)'

echo -n "decode leaf  "
python -m timeit \
    -s 'import btree' \
    -s 'pairs = [("%019d" % i, "%032d" % i) for i in range(1000)]' \
    -s 'keys = [k for k, v in pairs]' \
    -s 'values = [v for k, v in pairs]' \
    -s 'node = btree.LeafNode(42, keys, values)' \
    -s 'codec = btree.NodeCodec(19)' \
    -s 'encoded = codec.encode_leaf(node)' \
    'codec.decode(encoded)'

echo -n "encode_index "
python -m timeit \
    -s 'import btree' \
    -s 'pairs = [("%019d" % i, i) for i in range(1000)]' \
    -s 'keys = [k for k, v in pairs]' \
    -s 'values = [v for k, v in pairs]' \
    -s 'node = btree.IndexNode(42, keys, values)' \
    -s 'codec = btree.NodeCodec(19)' \
    'codec.encode_index(node)'

echo -n "decode index "
python -m timeit \
    -s 'import btree' \
    -s 'pairs = [("%019d" % i, i) for i in range(1000)]' \
    -s 'keys = [k for k, v in pairs]' \
    -s 'values = [v for k, v in pairs]' \
    -s 'node = btree.IndexNode(42, keys, values)' \
    -s 'codec = btree.NodeCodec(19)' \
    -s 'encoded = codec.encode_index(node)' \
    'codec.decode(encoded)'

